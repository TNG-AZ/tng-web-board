<h3>Plus Ones</h3>

@foreach (var p in PlusOnes)
{
    <span class="badge badge-pill badge-secondary">
        @p.PlusOne.SceneName
        <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick=@(async () => await RemovePlusOne(p))><span aria-hidden="true">&times;</span></button>
    </span>
}
<CollapsibleCard CardHeaderTitle="Add Plus One">
    <CardBody>
        <p>Search By:</p>
        <div class="form-group">
            <p>Please search by scene name OR enter email</p>
            <label>Scene Name: </label>
            <input class="form-control" @bind=@NewPlusOneSceneName/>
            <button type="button" @onclick="SearchBySceneName">Search by Scene Name</button><br/><br/>
            @if (MemberSearchResults?.Any() ?? false)
            {
                <ul>
                    @foreach (var m in MemberSearchResults)
                    {
                        <li>
                            <button type="button" @onclick=@(() => AddPlusOne(m.Id))>Add</button> @m.SceneName @(!string.IsNullOrWhiteSpace(m.ProfileUrl) ? $" - {m.ProfileUrl}" : string.Empty)
                        </li>
                    }
                </ul>
            }
            <label>Registered Email: </label>
            <input class="form-control" @bind=@NewPlusOneEmail />
        </div>
        <button type="button" @onclick=@(() => AddPlusOne())>Add by Email</button>
    </CardBody>
</CollapsibleCard>

<br/>
<h3>Notes</h3>
<textarea @bind="Rsvp.Notes"/><br/>
<button type="button" @onclick=@(async () => await SaveNote())>Save</button>