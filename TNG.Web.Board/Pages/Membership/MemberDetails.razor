@page "/members/edit/{memberId:guid?}"
@using Microsoft.AspNetCore.Html;
@{
    var paidOnDate = Member.Payments?.OrderByDescending(p => p.PaidOn).FirstOrDefault()?.PaidOn;
    var orientationOnDate = Member.Orientations?.OrderByDescending(o => o.DateReceived).FirstOrDefault()?.DateReceived;
    var activeSuspension = Member?.Suspensions?.OrderByDescending(s => s.EndDate ?? DateTime.MaxValue).FirstOrDefault(s => !s.EndDate.HasValue || s.EndDate >= DateTime.Now);
}

<h3>Member Details</h3>

<EditForm Model="Member" OnValidSubmit="UpdateMember" class="col-lg-12 col-xl-6">
    <h4>Demographics</h4>

    <div class="form-group">
        <label>Scene Name:</label>
        <input type="text" class="form-control" required="required" @bind="Member!.SceneName" />
    </div>
    <div class="form-group">
        <label>Legal Name:</label>
        <input type="text" class="form-control" required="required" @bind="Member.LegalName" />
    </div>
    <div class="form-group">
        <label>Date of Birth:</label>
        <input type="date" class="form-control" required="required" @bind="Member.Birthday" />
    </div>
    <div class="form-group">
        <label>Contact Email:</label>
        <input type="email" class="form-control" required="required" @bind="Member.EmailAddress" />
    </div>
    <div class="form-group">
        <label>Membership Type:</label>
        <select required="required" class="form-control" @onchange="MembershipTypeChange">
            <option value="0">Member</option>
            <option value="1">Guest</option>
            <option value="2">Honorary (by board approval only)</option>
        </select>
    </div>

    <br/>

    <h4>Eligibility</h4>

    <div class="form-check">
        <input type="checkbox" class="form-check-input" @bind="Member.HasAttendedSocial" /><label class="form-check-label">Has met social attendance requirement</label>
    </div>
    <div class="form-group">
        <label>Dues last paid on: @(paidOnDate?.ToString("MM/dd/yyyy") ?? "n/a")</label>
        <button type="button" @onclick=@(() => AddDuesPaidToggle = !AddDuesPaidToggle )>Add Dues</button><br />
        @if (AddDuesPaidToggle)
        {
            <label>Dues paid:</label>
            <input type="date" class="form-control" @bind="NewDuesPaid" />
        }
    </div>
    <div class="form-group">
        <label>Last orientation attended: @(orientationOnDate?.ToString("MM/dd/yyyy") ?? "n/a")</label>
        <button type="button" @onclick=@(() => AddOrientationDateToggle = !AddOrientationDateToggle )>Add Orientation</button><br />
        @if (AddOrientationDateToggle)
        {
            <label>Orientation attended:</label>
            <input type="date" class="form-control" @bind="NewOrientationAttended" />
        }
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" @bind="Member.ReceivedProofOfCovid19Vaccination" /><label class="form-check-label">Has submitted proof of COVID-19 vaccination</label>
    </div>

    <br/>

    <h4>Membership Notes</h4>

    <div class="form-group">
        <label>Suspension Status : @SuspensionDisplay(activeSuspension) @(activeSuspension?.Reason != null ? $"; Reason: {activeSuspension.Reason}" : string.Empty)</label>
        <button type="button" @onclick=@(() => AddSuspensionToggle = !AddSuspensionToggle )>Add Suspension</button><br />
        @if (AddSuspensionToggle)
        {
            <label>From: </label>
            <input type="date" class="form-control" @bind="NewSuspensionStartDate" />

            <label>To (leave blank for blacklist):</label>
            <input type="date" class="form-control" @bind="NewSuspensionEndDate" />

            <label>Reason:</label>
            <textarea class="form-control" @bind="NewSuspensionReason" />
        }
    </div>

    <h5>Notes</h5>
    <button type="button" @onclick=@(() => AddNoteToggle = !AddNoteToggle)>Add Note</button>
    <button type="button" @onclick=@(() => ViewNotesToggle = !ViewNotesToggle)>View Notes</button><br/>
    @if (AddNoteToggle)
    {
        <div class="form-group">
            <label>New note:</label>
            <textarea class="form-control" @bind="NewNote" /><br />
        </div>
    }
    @if (ViewNotesToggle && (Member.Notes?.Any() ?? false))
    {
        foreach(var note in Member.Notes.OrderByDescending(n => n.DateAdded))
        {
            <p>@($"{note.DateAdded.ToString("MM/dd/yyyy")} - {note.Note}")</p>
        }
    }
    <br/>
    <button type="submit">Update</button>
</EditForm>


