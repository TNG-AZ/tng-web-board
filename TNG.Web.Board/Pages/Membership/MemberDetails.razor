@page "/members/edit/{memberId:guid?}"
@using Microsoft.AspNetCore.Html;

<h3>Member Details</h3>

<EditForm Model="Member" OnValidSubmit="UpdateMember" class="col-lg-12 col-xl-6">
    <h4>Demographics</h4>

    <div class="form-group">
        <label>Scene Name:</label>
        <input type="text" class="form-control" required="required" @bind="Member!.SceneName" />
    </div>
    <div class="form-group">
        <label>Legal Name:</label>
        <input type="text" class="form-control" required="required" @bind="Member.LegalName" />
    </div>
    <div class="form-group">
        <label>Date of Birth:</label>
        <input type="date" class="form-control" required="required" @bind="Member.Birthday" />
    </div>
    <div class="form-group">
        <label>Contact Email:</label>
        <input type="email" class="form-control" required="required" @bind="Member.EmailAddress" />
    </div>
    <div class="form-group">
        <label>Membership Type:</label>
        <select required="required" class="form-control" @onchange="MembershipTypeChange">
            <option value="0">Member</option>
            <option value="1">Guest</option>
            <option value="2">Honorary (by board approval only)</option>
        </select>
    </div>

    <br/>

    <h4>Eligibility</h4>

    <div class="form-check">
        <input type="checkbox" class="form-check-input" @bind="Member.HasAttendedSocial" /><label class="form-check-label">Has met social attendance requirement</label>
    </div>
    <div class="form-group">
        <label>Dues last paid on: @(PaidOnDate?.ToString("MM/dd/yyyy") ?? "n/a")</label>
        <button type="button" @onclick=@(() => AddDuesPaidToggle = !AddDuesPaidToggle ) class="btn btn-primary btn-sm">Add Dues</button>
        @if (PaidOnDate.HasValue)
        {
            <button type="button" onclick=@(() => DeleteDues()) class="btn btn-outline-warning btn-sm">Delete Orientation</button>
        }
        <br />
        @if (AddDuesPaidToggle)
        {
            <label>Dues paid:</label>
            <input type="date" class="form-control" @bind="NewDuesPaid" />
        }
    </div>
    <div class="form-group">
        <label>Last orientation attended: @(OrientationOnDate?.ToString("MM/dd/yyyy") ?? "n/a")</label>
        <button type="button" @onclick=@(() => AddOrientationDateToggle = !AddOrientationDateToggle ) class="btn btn-primary btn-sm">Add Orientation</button>
        @if(OrientationOnDate.HasValue)
        {
            <button type="button" onclick=@(() => DeleteOrientation()) class="btn btn-outline-warning btn-sm">Delete Orientation</button>
        }
        <br />
        @if (AddOrientationDateToggle)
        {
            <label>Orientation attended:</label>
            <input type="date" class="form-control" @bind="NewOrientationAttended" />
        }
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" @bind="Member.ReceivedProofOfCovid19Vaccination" /><label class="form-check-label">Has submitted proof of COVID-19 vaccination</label>
    </div>

    <br/>

    
    @if(Member.Id != default)
    {
        <h4>Membership Notes</h4>

        <div class="form-group">
            <label>Suspension Status : @SuspensionDisplay() @(ActiveSuspension?.Reason != null ? $"; Reason: {ActiveSuspension.Reason}" : string.Empty)</label>
            <button type="button" @onclick=@(() => AddSuspensionToggle = !AddSuspensionToggle ) class="btn btn-danger btn-sm">Add Suspension</button><br />
            @if (ActiveSuspension is not null)
            {
                <button type="button" onclick=@(() => EndSuspension()) class="btn btn-warning btn-sm">End Suspension</button>
                <button type="button" onclick=@(() => DeleteSuspension()) class="btn btn-outline-warning btn-sm">Delete Suspension</button>
            }
            @if (AddSuspensionToggle)
            {
                <label>From: </label>
                <input type="date" class="form-control" @bind="NewSuspensionStartDate" />

                <label>To (leave blank for blacklist):</label>
                <input type="date" class="form-control" @bind="NewSuspensionEndDate" />

                <label>Reason:</label>
                <textarea class="form-control" @bind="NewSuspensionReason" />
                <button type="button" @onclick=@(() => AddSuspension() ) class="btn btn-outline-primary btn-sm">Submit</button>
            }
        </div>
    }
    <button type="submit">Update</button>
</EditForm>
<br/><br/>
@if(Member.Id != default)
{
    <h5>Notes</h5>
    <button type="button" @onclick=@(() => AddNoteToggle = !AddNoteToggle) class="btn btn-primary btn-sm">Add Note</button>
    <button type="button" @onclick=@(() => ViewNotesToggle = !ViewNotesToggle) class="btn btn-primary btn-sm">View Notes</button>

    <br />
    @if (AddNoteToggle)
    {
        <div class="form-group">
            <label>New note:</label>
            <textarea class="form-control" @bind="NewNote" /><br />
            <label>Note tags (comma separated values, optional):</label>
            <input type="text" @bind="NewNoteTags">
            <button type="button" @onclick=@(() => AddMemberNote() ) class="btn btn-outline-primary btn-sm">Submit</button>
        </div>
    }
    @if (ViewNotesToggle && (Member.Notes?.Any() ?? false))
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date Added</th>
                    <th>Note</th>
                    <th>
                        Tags
                        <input type="text" @bind="NotesTagsFilter" />
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var note in GetFilteredNotes())
                {
                    <tr>
                        <td>@note.DateAdded.ToString("MM/dd/yyyy")</td>
                        <td>@note.Note</td>
                        <td>@(string.Join(", ", note.NoteTags?.Select(t => t.Tag.Name).OrderBy(n => n) ?? Enumerable.Empty<string>()))</td>
                    </tr>
                }
            </tbody>
        </table>

    }
}