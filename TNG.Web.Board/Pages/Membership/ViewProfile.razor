@page "/members/view/"
@page "/members/view/{profileUrl}"

@if (UserMember is null)
{
    navigation.NavigateTo("/members/new");
}
<AuthorizeView Roles="Boardmember">
    <Authorized>
        <button @onclick="@(async () => await GenerateDuesInvoice())">Send Dues Invoice</button>
    </Authorized>
</AuthorizeView>

@if(EnableEdit)
{
    <button type="button" @onclick=@(() => {EditToggle = !EditToggle;})>Toggle Edit Mode</button>
}
@if (EditToggle)
{
    <br/><button type="button" @onclick="@(async () => await TogglePrivate())">@TogglePrivateButtonText</button>
    <EditForm Model="UserMember" OnValidSubmit=@(async () => await SaveUser()) class="col-lg-12 col-xl-6">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Scene Name:</label>
            <input type="text" class="form-control" required="required" @bind="UserMember!.SceneName" />
        </div>
        <div class="form-group">
            <label>Profile URL (/members/view/yourURLHere)</label>
            <input type="text" class="form-control" @bind="UserMember!.ProfileUrl" maxlength="20"/>
        </div>
        <div class="form-group">
            <label>About Me:</label><br/>
            <textarea @bind="UserMember!.AboutMe" />
        </div>
        <button type="submit">Submit</button>
    </EditForm>
}
else
{
    <h3>@ViewMember?.SceneName</h3>
    <h4>About</h4>
    <p>@ViewMember?.AboutMe</p>
}
<h4>Fetishes</h4>
@if (EnableEdit)
{
    <EditForm EditContext="editContext" OnValidSubmit="@(async () => await AddFetishToMember())" class="form-inline">
        <div class="form-group">
            <input type="text" list="fetishes" @bind="@NewFetishName" class="form-control" placeholder="Fetish" />
            <datalist id="fetishes">
                @foreach (var fetish in Fetishes)
                {
                        <option value="@fetish.Name" />
                }
            </datalist>
        </div>
        <div class="form-group">
            <select required="required" class="form-control" @onchange="NewFetishRoleChange">
                <option value="" selected>Role</option>
                <option value="0">Top</option>
                <option value="1">Bottom</option>
                <option value="2">Switch</option>
            </select>
        </div>
        <div class="form-group">
            <input type="checkbox" class="form-check-input" @bind="NewFetishWillingToTeach" /><label class="form-check-label">Willing to teach?</label>
        </div>
        <button type="submit">Add</button>
    </EditForm>
}

@foreach (var fetish in ViewMember?.MemberFetishes)
{
    <span class="badge badge-pill badge-secondary">@fetish.Fetish.Name@(!string.IsNullOrEmpty(fetish.Role?.ToString()) ? $" ({fetish.Role.ToString()})" : string.Empty)@(fetish.WillingToTeach ?? false ? " (Willing to teach)" : string.Empty)
    @if (EnableEdit)
    {
        <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick=@(async () => await UnlinkFetish(fetish.Id))><span aria-hidden="true">&times;</span></button>
    }
    </span>
}
